<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='mac' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Projects.csv+ (Multiple Connections)' inline='true' name='federated.00qk7wk15x7dg91gwhd0t0wl0c81' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='RefactoringTypes' name='textscan.1hdlpq4082p60y1ead2s20aeekrl'>
            <connection class='textscan' directory='/Users/wayoubi/Desktop/Refactoring Project' filename='RefactoringTypes.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Projects' name='textscan.0aor6yd1njajjb0zsuvbg0bkqycu'>
            <connection class='textscan' directory='/Users/wayoubi/Desktop/Refactoring Project' filename='Projects.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Commits' name='textscan.1lougw80gkahx619letic0xr0urx'>
            <connection class='textscan' directory='/Users/wayoubi/Desktop/Refactoring Project' filename='Commits.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Refactorings' name='textscan.07dhzul0hf6yex1cqco7g18qngzv'>
            <connection class='textscan' directory='/Users/wayoubi/Desktop/Refactoring Project' filename='Refactorings.csv' password='' server='' />
          </named-connection>
          <named-connection caption='OrganicClasses' name='textscan.1k3uho0122t26a14sxyca1lkb60y'>
            <connection class='textscan' directory='/Users/wayoubi/Desktop/Refactoring Project' filename='OrganicClasses.csv' password='' server='' />
          </named-connection>
          <named-connection caption='OrganicSmell' name='textscan.02tz3f70wnlide118gbuy1uluccg'>
            <connection class='textscan' directory='/Users/wayoubi/Desktop/Refactoring Project' filename='OrganicSmell.csv' password='' server='' />
          </named-connection>
          <named-connection caption='OrganicMethods' name='textscan.1ooeo0305uh5wq13g1pr70okaih9'>
            <connection class='textscan' directory='/Users/wayoubi/Desktop/Refactoring Project' filename='OrganicMethods.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Refactorings.csv].[TypeID]' />
              <expression op='[RefactoringTypes.csv].[TypeID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[Commits.csv].[ProjectID]' />
                  <expression op='[Refactorings.csv].[ProjectID]' />
                </expression>
                <expression op='='>
                  <expression op='[Commits.csv].[CommitHash]' />
                  <expression op='[Refactorings.csv].[CommitHash]' />
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Commits.csv].[ProjectID]' />
                  <expression op='[Projects.csv].[ProjectID]' />
                </expression>
              </clause>
              <relation connection='textscan.1hdlpq4082p60y1ead2s20aeekrl' name='Commits.csv' table='[Commits#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='CommitID' ordinal='0' />
                  <column datatype='string' name='AuthorName' ordinal='1' />
                  <column datatype='string' name='BranchName' ordinal='2' />
                  <column datatype='string' name='CommitHash' ordinal='3' />
                  <column datatype='datetime' name='Commit DateTime' ordinal='4' />
                  <column datatype='string' name='FullMessage' ordinal='5' />
                  <column datatype='integer' name='ProjectID' ordinal='6' />
                  <column datatype='string' name='ShortMessage' ordinal='7' />
                </columns>
              </relation>
              <relation connection='textscan.1hdlpq4082p60y1ead2s20aeekrl' name='Projects.csv' table='[Projects#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ProjectID' ordinal='0' />
                  <column datatype='string' name='Project Name' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1hdlpq4082p60y1ead2s20aeekrl' name='Refactorings.csv' table='[Refactorings#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='RefactoringID' ordinal='0' />
                <column datatype='string' name='CommitHash' ordinal='1' />
                <column datatype='string' name='SourceAttributeName' ordinal='2' />
                <column datatype='string' name='SourceClassName' ordinal='3' />
                <column datatype='string' name='SourceClassPackageName' ordinal='4' />
                <column datatype='string' name='SourceClassPath' ordinal='5' />
                <column datatype='string' name='SourceOperatationName' ordinal='6' />
                <column datatype='string' name='TargetClassName' ordinal='7' />
                <column datatype='string' name='TargetClassPackageName' ordinal='8' />
                <column datatype='string' name='TargetClassPath' ordinal='9' />
                <column datatype='string' name='TargetOperatationName' ordinal='10' />
                <column datatype='integer' name='TypeID' ordinal='11' />
                <column datatype='integer' name='ProjectID' ordinal='12' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1hdlpq4082p60y1ead2s20aeekrl' name='RefactoringTypes.csv' table='[RefactoringTypes#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='TypeID' ordinal='0' />
              <column datatype='string' name='Type Name' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AuthorName]' value='[Commits.csv].[AuthorName]' />
          <map key='[BranchName]' value='[Commits.csv].[BranchName]' />
          <map key='[Commit DateTime]' value='[Commits.csv].[Commit DateTime]' />
          <map key='[CommitHash (Refactorings.csv)]' value='[Refactorings.csv].[CommitHash]' />
          <map key='[CommitHash]' value='[Commits.csv].[CommitHash]' />
          <map key='[CommitID]' value='[Commits.csv].[CommitID]' />
          <map key='[FullMessage]' value='[Commits.csv].[FullMessage]' />
          <map key='[Project Name]' value='[Projects.csv].[Project Name]' />
          <map key='[ProjectID (Projects.csv)]' value='[Projects.csv].[ProjectID]' />
          <map key='[ProjectID (Refactorings.csv)]' value='[Refactorings.csv].[ProjectID]' />
          <map key='[ProjectID]' value='[Commits.csv].[ProjectID]' />
          <map key='[RefactoringID]' value='[Refactorings.csv].[RefactoringID]' />
          <map key='[ShortMessage]' value='[Commits.csv].[ShortMessage]' />
          <map key='[SourceAttributeName]' value='[Refactorings.csv].[SourceAttributeName]' />
          <map key='[SourceClassName]' value='[Refactorings.csv].[SourceClassName]' />
          <map key='[SourceClassPackageName]' value='[Refactorings.csv].[SourceClassPackageName]' />
          <map key='[SourceClassPath]' value='[Refactorings.csv].[SourceClassPath]' />
          <map key='[SourceOperatationName]' value='[Refactorings.csv].[SourceOperatationName]' />
          <map key='[TargetClassName]' value='[Refactorings.csv].[TargetClassName]' />
          <map key='[TargetClassPackageName]' value='[Refactorings.csv].[TargetClassPackageName]' />
          <map key='[TargetClassPath]' value='[Refactorings.csv].[TargetClassPath]' />
          <map key='[TargetOperatationName]' value='[Refactorings.csv].[TargetOperatationName]' />
          <map key='[Type Name]' value='[RefactoringTypes.csv].[Type Name]' />
          <map key='[TypeID (RefactoringTypes.csv)]' value='[RefactoringTypes.csv].[TypeID]' />
          <map key='[TypeID]' value='[Refactorings.csv].[TypeID]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CommitID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CommitID]</local-name>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias>CommitID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AuthorName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AuthorName]</local-name>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias>AuthorName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BranchName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BranchName]</local-name>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias>BranchName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CommitHash</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CommitHash]</local-name>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias>CommitHash</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commit DateTime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Commit DateTime]</local-name>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias>Commit DateTime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FullMessage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FullMessage]</local-name>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias>FullMessage</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProjectID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProjectID]</local-name>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias>ProjectID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShortMessage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ShortMessage]</local-name>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias>ShortMessage</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Commits.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProjectID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProjectID (Projects.csv)]</local-name>
            <parent-name>[Projects.csv]</parent-name>
            <remote-alias>ProjectID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Name]</local-name>
            <parent-name>[Projects.csv]</parent-name>
            <remote-alias>Project Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Projects.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RefactoringID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RefactoringID]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>RefactoringID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CommitHash</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CommitHash (Refactorings.csv)]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>CommitHash</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SourceAttributeName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SourceAttributeName]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>SourceAttributeName</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SourceClassName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SourceClassName]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>SourceClassName</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SourceClassPackageName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SourceClassPackageName]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>SourceClassPackageName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SourceClassPath</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SourceClassPath]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>SourceClassPath</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SourceOperatationName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SourceOperatationName]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>SourceOperatationName</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TargetClassName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TargetClassName]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>TargetClassName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TargetClassPackageName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TargetClassPackageName]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>TargetClassPackageName</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TargetClassPath</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TargetClassPath]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>TargetClassPath</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TargetOperatationName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TargetOperatationName]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>TargetOperatationName</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TypeID]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>TypeID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProjectID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProjectID (Refactorings.csv)]</local-name>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias>ProjectID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Refactorings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TypeID (RefactoringTypes.csv)]</local-name>
            <parent-name>[RefactoringTypes.csv]</parent-name>
            <remote-alias>TypeID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type Name]</local-name>
            <parent-name>[RefactoringTypes.csv]</parent-name>
            <remote-alias>Type Name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[RefactoringTypes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Author Name' datatype='string' name='[AuthorName]' role='dimension' type='nominal' />
      <column caption='Branch Name' datatype='string' name='[BranchName]' role='dimension' type='nominal' />
      <column caption='Commit Hash' datatype='string' name='[CommitHash]' role='dimension' type='nominal' />
      <column caption='Commit ID' datatype='integer' name='[CommitID]' role='dimension' type='ordinal' />
      <column caption='Full Message' datatype='string' name='[FullMessage]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Project Name1' datatype='string' name='[Project Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ProjectID (Projects.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ProjectID (Refactorings.csv)]' role='dimension' type='ordinal' />
      <column caption='Project ID' datatype='integer' name='[ProjectID]' role='dimension' type='ordinal' />
      <column caption='Refactoring ID' datatype='integer' name='[RefactoringID]' role='dimension' type='ordinal' />
      <column caption='Short Message' datatype='string' name='[ShortMessage]' role='dimension' type='nominal' />
      <column caption='Source Attribute Name' datatype='string' name='[SourceAttributeName]' role='dimension' type='nominal' />
      <column caption='Source Class Name' datatype='string' name='[SourceClassName]' role='dimension' type='nominal' />
      <column caption='Source Class Package Name' datatype='string' name='[SourceClassPackageName]' role='dimension' type='nominal' />
      <column caption='Source Class Path' datatype='string' name='[SourceClassPath]' role='dimension' type='nominal' />
      <column caption='Source Operatation Name' datatype='string' name='[SourceOperatationName]' role='dimension' type='nominal' />
      <column caption='Target Class Name' datatype='string' name='[TargetClassName]' role='dimension' type='nominal' />
      <column caption='Target Class Package Name' datatype='string' name='[TargetClassPackageName]' role='dimension' type='nominal' />
      <column caption='Target Class Path' datatype='string' name='[TargetClassPath]' role='dimension' type='nominal' />
      <column caption='Target Operatation Name' datatype='string' name='[TargetOperatationName]' role='dimension' type='nominal' />
      <column datatype='string' name='[Type Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[TypeID (RefactoringTypes.csv)]' role='dimension' type='ordinal' />
      <column caption='Type ID' datatype='integer' name='[TypeID]' role='dimension' type='ordinal' />
      <column-instance column='[AuthorName]' derivation='None' name='[none:AuthorName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type Name]' derivation='None' name='[none:Type Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.917969' measure-ordering='alphabetic' measure-percentage='0.0820312' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AuthorName:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;tsantalis@gmail.com&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;jwilson@squareup.com&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;jw@squareup.com&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Move Source Folder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Extract And Move Method&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inline Method&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Push Down Method&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pull Up Attribute&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Move Attribute&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Extract Interface&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Move Class&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rename Class&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rename Method&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pull Up Method&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Move Method&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Extract Method&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rename Package&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Push Down Attribute&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Extract Superclass&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Comments'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Refactoring mentioned in Short Comments</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Projects.csv+ (Multiple Connections)' name='federated.00qk7wk15x7dg91gwhd0t0wl0c81' />
          </datasources>
          <datasource-dependencies datasource='federated.00qk7wk15x7dg91gwhd0t0wl0c81'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Short Message' datatype='string' name='[ShortMessage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type Name]' role='dimension' type='nominal' />
            <column-instance column='[ShortMessage]' derivation='None' name='[none:ShortMessage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type Name]' derivation='None' name='[none:Type Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:ShortMessage:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;-Fixed the recovery of AbstractMethodDeclaration from IMethod using the source ranges. -Improved the detection of modified fields by including increment/decrement operators. -In Extract Clone refactoring the additionally called methods are considered type-2 clones if the have renames only to local variables excluding fields. This fixes all pairs in clone group 545 found in JFreeChart-1.0.10 (Deckard results) -Added a check about the existence of methods having the name specified by the user directly in the Clone Visualization view. The refactoring is not processed if an existing method in the target class has the same name. This fixes all pairs in clone group 549 found in JFreeChart-1.0.10 (Deckard results)&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;-Improved matching of ConditionalLoop and added support for EnhancedForLoop. -Created matching.loop package to abstract ConditionalLoop(ForStatement, WhileStatement, and DoStatement) and EnhancedForLoop(EnhancedForStatement). -Created InstanceOfVariableModifier in util package and added corresponding methods in ExpressionExtractor. -Modified match(ForStatement, Object), match(WhileStatement, Object), match(DoStatement, Object), and match(EnhancedForStatement, Object) in ASTNodeMatcher so that an advanced match is executed only if a basic match fails.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;-In Extract Class Refactoring, the fields being inherited by the source class and used in the extracted methods are properly handled. This is a fix for the refactoring opportunities found in the following classes of project cobertura-1.9.4.1 net.sourceforge.cobertura.coveragedata.ProjectData net.sourceforge.cobertura.coveragedata.SourceFileData net.sourceforge.cobertura.coveragedata.PackageData net.sourceforge.cobertura.coveragedata.ClassData&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;-In Feature Envy code smell the source methods belonging to test classes are excluded from being reported as refactoring opportunities. -In DuplicatedCode view the ApplyRefactoring action is removed, because it is redundant -CloneGroupList maintains a reference to the imported Java Project to avoid the problems caused when the user is selecting another project and then returns back to the original imported project. -Updated plug-in version to 5.0.45&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Added method addTypeBinding() in class ExtractCloneRefactoring to deal with typeBindings being equal based on IBinding.isEqualTo() but not Object.equals()&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Added support for adding missing constructors in the subclasses when the clone is pulled up in an intermediate superclass.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Added support for pulling up fields and methods that are declared in intermediate classes between the classes containing the clone fragments and their common superclass.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Cleanup refactoring: Move 3 methods into DelegatingHttpsURLConnection&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Consolidate two enums, extract classes from RestAdapter&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Extended Extract Clone Refactoring to introduce a default constructor in the intermediate superclass, if at least one of the subclasses declares all its constructors without super constructor calls and the other subclass does not contain a constructor calling a super constructor without parameters, and the common superclass declares a constructor without parameters.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Extracted the common logic for finding topics from classes ExtractClassCandidateRefactoring and ExtractedConcept to class TopicFinder. The list of stop words is statically initialized in class TopicFinder.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Extracted the precondition examination logic from the SubTreeMapper subclasses to class PreconditionExaminer. DivideAndConquerMatcher delegates to PreconditionExaminer.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Extracted the TypeBinding computation into a common method. Added special handling for different interface types not having a common superclass.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Fix some issues according to the comments in the previous pull request, and add some tests&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Fixed a bug in Extract Clone Refactoring related to the variable being returned by the extracted method. Improved the computation of the exception types thrown by the statements in the clone fragments.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Fixed a common bug in ExtractClassRefactoring and MoveMethodRefactoring Enum constants should not be qualified in SwitchCase expression, after moving a method to the extracted or envied class, respectively. If the Enum is declared in the source class, its access modifier should be set to public.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Fixed the Extract Method Refactoring mechanics when the variable criterion declaration statement is nested deeper than the extracted method invocation insertion statement. This fix improves the extraction of variable anchorRect (at block B8) from method drawDomainMarker() in class AbstractXYItemRenderer of project JFreeChart 1.0.14.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Fixed the parameterization of field accesses which are used as expressions in conditional statements (if, while). Improved the comparison of TypeLiteral nodes in ASTNodeMatcher. Fixed the extraction of the type from a VariableDeclaration to take into account the different ways an array type can be declared. For example, PeriodAxisLabelInfo info[] = new PeriodAxisLabelInfo[1]; PeriodAxisLabelInfo[] info = new PeriodAxisLabelInfo[2]; Introduced class RefactoringUtility, which contains functionality used commonly by all Refactoring implementations.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Fixed the refactoring of clone pair 115-1-2 found in JFreeChart-1.0.10 (Deckard results) org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItem() org.jfree.chart.renderer.xy.XYBubbleRenderer.getLegendItem()&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Fixed the refactoring of clones with additionally matched statements coming from the advanced matching of control predicate statements.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Fixed the refactoring of symmetrical if-else-if statements.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Improved Extract Clone Refactoring to replace super method calls with regular method calls, when the clone fragment is pulled up to the common super class declaring the methods corresponding to the super calls. Improved the detection of the common superclass by creating inheritance hierarchies from the initially extracted common super type bindings, and returning the type binding found in the deepest level of the inheritance hierarchies.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Improved the computation of the renamed variables by examining the mapped statements in ascending order and not allowing an already matched variable to be matched with another one. Improved the computation of weight for TYPE_COMPATIBLE_REPLACEMENT differences by adding in the weight the absolute value of the length difference of the corresponding binding signatures.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Improved the views for Feature Envy, God Class, Long Method, Type-Checking by allowing the user to apply refactoring opportunities on the currently examined project, even if the user has selected another project in between. The active project is always the last project on which a detection of code smells has been performed.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;incorporated code review feedback. Simplified the code, merged Device and Control and removed unnecessary fields.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Inline single-use method in web socket writer.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;issue \#198: rename Header -&gt; HeaderPair to harvest the names for new annotations&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Migrated the code for clone fragment refactoring to the IDE.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move all failures into connectFailed and callFailed. (\#3550)&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move converter into the main package, remove Gson from core.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move converters into their own packages.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move core interceptors into top level classes.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move packages.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move QueueFile to &apos;io&apos; package.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move response Converter lookup to happen during method parsing.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move sample to examples folder to accommodate future additions.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move tests to same package as tested classes.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Move WebSockets from separate artifact to main.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Moved getSignature() to ConstructorObject and added a delegate method to MethodObject&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Moved the code for computing the return type of the extracted method from ExtractCloneRefactoring to PreconditionExaminer. Added clone-fragment-level precondition violation for the case where not all possible execution flows end in a return statement. Extended the previous implementation of precondition checkIfAllPossibleExecutionFlowsEndInReturn()&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;moved the JsonSerializationContext/JsonDeserializationContext fields to where they are used. Also moved TreeTypeAdapter to internal.bind package for potential use in JsonAdapterAnnotationFactory.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Moved the logic for finding the Clone refactoring that should be applied to class PreconditionExaminer. Added a new precondition violation that considers the refactoring infeasible, if the common super type is an interface and the classes where the clones belong to extend a superclass other than java.lang.Object&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;moved util to android, added ShakeDetector&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Parameterize RequestBuilderAction, rename to RequestAction.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Refactoring RestAdapter HTTP request construction.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Reimplemented the method checking the need for adding a return statement at the end of the extracted method. Only the last if-else-if chain is required to contain a return or throw statement in every clause.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Remove &apos;set&apos; prefix from builder methods.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Remove Client, Request, Response, TypedInput, and TypedOutput abstractions.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Remove endpoint names.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Remove inconsistent &apos;send&apos; prefix from message/ping methods.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Remove specialized ConversionException.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Removed ability to change the HPACK decoder header table size setting.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Removed button label and renamed ClientMessage to ErrorResponse&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename &apos;@Raw&apos; to &apos;@Streaming&apos; for better semantics.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename &apos;Endpoint&apos; to &apos;BaseUrl&apos;.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename &apos;pair&apos; to &apos;field&apos; to match annotation.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename a few more &apos;pair&apos; occurances to &apos;field&apos;.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename Callback.success() to onSuccess(), and failure() to onFailure().&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename com.squareup.okhttp to okhttp3&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename fetchStart/fetchEnd to callStart/callEnd. (\#3522)&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename FramedConnection to Http2Connection.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename HttpURLConnectionImpl to OkHttpURLConnection.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename main class to Retrofit.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename NewWebSocket to WebSocket.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename RequestFactoryParser to RequestFactory.Builder.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename samples/ to retrofit-samples/&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Rename the samples directory.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;renamed JavaUtilConcurrentLocksTest to JavaUtilConcurrentAtomicTest&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Renamed method getupdateMethodValue() to getUpdateMethodValue()&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Test code refactoring&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;The Extract Method refactoring opportunities in which the statement declaring the variable criterion is nested in a deeper level compared to the level in which the extracted method invocation will be placed (i.e., the level in which the first statement of the slice is nested) are automatically excluded from being reported.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;The parent node of a statement is not always a Block. It could also be a SwitchStatement. This bug created a ClassCastException in Extract Clone and Extract Method refactorings.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;Updated ExtractCloneRefactoring to parameterize differences in additionally matched statements. Updated ASTNodeMatcher to report differences in the data structure accesses within the bodies of the advanced matched loops.&quot;' />
              <groupfilter function='member' level='[none:ShortMessage:nk]' member='&quot;When extracting a Utility Class, the calls of static methods in the clone fragments, which do not correspond to duplicated method declarations, are parameterized.&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]' direction='DESC' using='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:ShortMessage:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='cols' value='Number of Refactorings' />
            <format attr='subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]</rows>
        <cols>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Refactoring'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Less 3 Refactorings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Projects.csv+ (Multiple Connections)' name='federated.00qk7wk15x7dg91gwhd0t0wl0c81' />
          </datasources>
          <datasource-dependencies datasource='federated.00qk7wk15x7dg91gwhd0t0wl0c81'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Type Name]' role='dimension' type='nominal' />
            <column-instance column='[Type Name]' derivation='None' name='[none:Type Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]'>
            <groupfilter from='&quot;Extract And Move Method&quot;' function='range' level='[none:Type Name:nk]' to='&quot;Rename Package&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]' direction='DESC' using='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='Number of Refactorings' />
            <format attr='subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]</rows>
        <cols>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Refactorings By Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Refactorings by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Projects.csv+ (Multiple Connections)' name='federated.00qk7wk15x7dg91gwhd0t0wl0c81' />
          </datasources>
          <datasource-dependencies datasource='federated.00qk7wk15x7dg91gwhd0t0wl0c81'>
            <column datatype='datetime' name='[Commit DateTime]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Project Name1' datatype='string' name='[Project Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type Name]' role='dimension' type='nominal' />
            <column-instance column='[Project Name]' derivation='None' name='[none:Project Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type Name]' derivation='None' name='[none:Type Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Commit DateTime]' derivation='Year' name='[yr:Commit DateTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Project Name:nk]'>
            <groupfilter from='&quot;gson&quot;' function='range' level='[none:Project Name:nk]' to='&quot;retrofit&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Project Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='Number of Refactorings' />
            <format attr='subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]</rows>
        <cols>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[yr:Commit DateTime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Refactorings by Developer'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 3 Coders - All Projects</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Projects.csv+ (Multiple Connections)' name='federated.00qk7wk15x7dg91gwhd0t0wl0c81' />
          </datasources>
          <datasource-dependencies datasource='federated.00qk7wk15x7dg91gwhd0t0wl0c81'>
            <column caption='Author Name' datatype='string' name='[AuthorName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Project Name1' datatype='string' name='[Project Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type Name]' role='dimension' type='nominal' />
            <column-instance column='[AuthorName]' derivation='None' name='[none:AuthorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Name]' derivation='None' name='[none:Project Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type Name]' derivation='None' name='[none:Type Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]'>
            <groupfilter from='&quot;adrian.f.cole@gmail.com&quot;' function='range' level='[none:AuthorName:nk]' to='&quot;zackary.valenta@gmail.com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]' direction='DESC' using='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' />
          <filter class='categorical' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Project Name:nk]'>
            <groupfilter function='member' level='[none:Project Name:nk]' member='&quot;jdeodorant&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extract And Move Method&quot;</bucket>
              <bucket>&quot;Pull Up Attribute&quot;</bucket>
              <bucket>&quot;Pull Up Method&quot;</bucket>
              <bucket>&quot;Rename Method&quot;</bucket>
              <bucket>&quot;Extract Method&quot;</bucket>
              <bucket>&quot;Move Attribute&quot;</bucket>
              <bucket>&quot;Move Method&quot;</bucket>
              <bucket>&quot;Move Class&quot;</bucket>
              <bucket>&quot;Rename Class&quot;</bucket>
              <bucket>&quot;Push Down Method&quot;</bucket>
              <bucket>&quot;Push Down Attribute&quot;</bucket>
              <bucket>&quot;Rename Package&quot;</bucket>
              <bucket>&quot;Inline Method&quot;</bucket>
              <bucket>&quot;Extract Superclass&quot;</bucket>
              <bucket>&quot;Extract Interface&quot;</bucket>
              <bucket>&quot;Move Source Folder&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]</column>
            <column>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Project Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='Number of Refactorings' />
            <format attr='subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]</rows>
        <cols>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='coder_by_year_month'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Developer by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Projects.csv+ (Multiple Connections)' name='federated.00qk7wk15x7dg91gwhd0t0wl0c81' />
          </datasources>
          <datasource-dependencies datasource='federated.00qk7wk15x7dg91gwhd0t0wl0c81'>
            <column caption='Author Name' datatype='string' name='[AuthorName]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Commit DateTime]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Commit DateTime]' derivation='MY' name='[my:Commit DateTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AuthorName]' derivation='None' name='[none:AuthorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]'>
            <groupfilter function='member' level='[none:AuthorName:nk]' member='&quot;jw@squareup.com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='Number of Refactorings' />
            <format attr='subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]</rows>
        <cols>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[my:Commit DateTime:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Refactorings by Developer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]</field>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Project Name:nk]</field>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]</field>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[sum:Number of Records:qk]</field>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[yr:Commit DateTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Number of Refactoring'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Refactorings By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Project Name:nk]</field>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='coder_by_year_month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:AuthorName:nk]</field>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[qr:Commit DateTime:ok]</field>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[yr:Commit DateTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Comments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:ShortMessage:nk]</field>
            <field>[federated.00qk7wk15x7dg91gwhd0t0wl0c81].[none:Type Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Comments' width='384'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Number of Refactoring' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Refactorings By Year' width='384'>
      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
      lS1uj9knAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Refactorings by Developer' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='coder_by_year_month' width='384'>
      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
      I0Dh+2SOCo4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
